function element_group(a, e, t, r, i, d, n, o, s, l, c) { var p = t + "px " + r + "px", m = " scale(" + i + "," + d + ") " + (" translate(" + n + ",") + o + ")  rotate(" + s + ") "; return l ? a.insert("g", c).attr("id", e).attr("transform-origin", p).attr("transform", m) : a.append("g").attr("id", e).attr("transform-origin", p).attr("transform", m), d3.select("#" + e) } function element_polygon(a, e, t, r, i, d, n, o, s, l, c) { return a.append("polygon").attr("id", e).attr("points", t).attr("style", " fill:" + s + ";  stroke:" + l + ";  stroke-width:" + c + "; ").attr("transform", " scale(" + r + "," + i + ") " + (" translate(" + d + ",") + n + ")  rotate(" + o + ") "), d3.select("#" + e) } function element_path(a, e, t, r, i, d, n, o, s, l, c, p, m, $, g) { return a.append("path").attr("id", e).attr("d", t).attr("fill-opacity", l).attr("stroke-opacity", m).attr("fill-rule", "evenodd").attr("stroke-linejoin", $).attr("stroke-linecap", g).attr("style", " fill:" + s + ";  stroke:" + s + ";  stroke-width:" + p + "; ").attr("transform", " scale(" + r + "," + i + ") " + (" translate(" + d + ",") + n + ")  rotate(" + o + ") "), d3.select("#" + e) } function element_linearGradient(a, e, t, r, i, d, n) { return t > 100 ? console.log("(element_linearGradient) - max x1 is 100") : t < 0 && console.log("(element_linearGradient) - min x1 is 0"), r > 100 ? console.log("(element_linearGradient) - max y1 is 100") : r < 0 && console.log("(element_linearGradient) - min y1 is 0"), i > 100 ? console.log("(element_linearGradient) - max x2 is 100") : i < 0 && console.log("(element_linearGradient) - min x2 is 0"), d > 100 ? console.log("(element_linearGradient) - max y2 is 100") : d < 0 && console.log("(element_linearGradient) - min y2 is 0"), a.append("defs").attr("id", "defs_" + e).append("linearGradient").attr("id", e).attr("x1", t + "%").attr("y1", r + "%").attr("x2", i + "%").attr("y2", d + "%"), n.forEach(function (a, t, r) { var i = " stop-color:" + a.color + "; ", d = " stop-opacity:" + a.opacity + "; "; d3.select("#" + e).append("stop").attr("offset", a.offset + "%").attr("style", i + d) }), d3.select("#" + e) } function element_radialGradient(a, e, t) { return a.append("defs").attr("id", "defs_" + e).append("radialGradient").attr("id", e), t.forEach(function (a, t, r) { var i = " stop-color:" + a.color + "; ", d = " stop-opacity:" + a.opacity + "; "; d3.select("#" + e).append("stop").attr("offset", a.offset + "%").attr("style", i + d) }), d3.select("#" + e) } function element_ellipse(a, e, t, r, i, d, n, o, s, l, c, p, m, $) { return a.append("ellipse").attr("id", e).attr("cx", t).attr("cy", r).attr("rx", i).attr("ry", d).attr("style", " fill:" + n + ";  stroke:" + o + ";  stroke-width:" + s + "; ").attr("transform", " scale(" + l + "," + c + ") " + (" translate(" + p + ",") + m + ")  rotate(" + $ + ") "), d3.select("#" + e) } function element_circle(a, e, t, r, i, d, n, o, s, l, c, p, m) { return a.append("circle").attr("id", e).attr("cx", t).attr("cy", r).attr("r", i).attr("style", " fill:" + d + ";  stroke:" + n + ";  stroke-width:" + o + "; ").attr("transform", " scale(" + s + "," + l + ") " + (" translate(" + c + ",") + p + ")  rotate(" + m + ") "), d3.select("#" + e) } function element_rect(a, e, t, r, i, d, n, o, s, l, c, p) { return a.append("rect").attr("id", e).attr("width", t).attr("height", r).attr("style", " fill:" + i + ";  stroke:" + d + ";  stroke-width:" + n + "; ").attr("transform", " scale(" + o + "," + s + ") " + (" translate(" + l + ",") + c + ")  rotate(" + p + ") "), d3.select("#" + e) } function element_img(a, e, t, r, i, d, n, o, s, l, c, p) { return a.append("image").attr("id", e).attr("width", t).attr("height", r).attr("href", i).attr("style", " stroke:" + d + ";  stroke-width:" + n + "; ").attr("transform", " scale(" + o + "," + s + ") " + (" translate(" + l + ",") + c + ")  rotate(" + p + ") "), d3.select("#" + e) } function changeImageBrightness(a, e, t = "1s") { let r = d3.select(`#${a}`); r.transition().duration(t).style("filter", `brightness(${e}%)`) } function changeImageScale(a, e, t = "1s") { let r = d3.select(`#${a}`); r.transition().duration(t).style("transform", `scale(${e})`) } function changeImagePosition(a, e, t, r = 1e3) { let i = d3.select(`#${a}`); i.transition().duration(r).style("transform", `translate(${e}px, ${t}px)`) } function changeImageSrcWithFadeIn(a, e, t, r = 100) { let i = d3.select(`#${a}`); i.attr("href", e), i.transition().duration(t).style("filter", `brightness(${r}%)`) } function updateImageProperties(a, e, t, r, i, d = "1s") { let n = d3.select(`#${a}`), o = `scale(${t}) translate(${r}px, ${i}px)`; n.transition().duration(d).style("filter", `brightness(${e}%)`).style("transform", o) } function element_text(a, e, t, r, i, d, n, o, s, l, c, p) { return a.append("text").attr("id", t).attr("x", r).attr("y", i).attr("style", " stroke:" + d + ";  stroke-width:" + n + "; ").attr("transform", " scale(" + o + "," + s + ") " + (" translate(" + l + ",") + c + ")  rotate(" + p + ") ").text(e), d3.select("#" + t) } function isEmpty(a) { for (var e in a) if (Object.prototype.hasOwnProperty.call(a, e)) return !1; return !0 } function BodyBuilder(a, e, t) { var r, i, d, n; async function o() { e.UpperBody.Right.Fore.anim.prim.resetOrigin(e.UpperBody.Right.Fore.data.origX + 10, e.UpperBody.Right.Fore.data.origY - 4.5), e.UpperBody.LeftY.Fore.anim.prim.resetOrigin(e.UpperBody.LeftY.Fore.data.origX - 8, e.UpperBody.LeftY.Fore.data.origY - 2), e.UpperBody.Right.Arm.anim.prim.resetOrigin(e.UpperBody.Right.Arm.data.origX + 0, e.UpperBody.Right.Arm.data.origY - 19), e.LowerBody.Right.Calf.anim.prim.resetOrigin(e.LowerBody.Right.Calf.data.origX + 16, e.LowerBody.Right.Calf.data.origY - 2), e.LowerBody.LeftY.Calf.anim.prim.resetOrigin(e.LowerBody.LeftY.Calf.data.origX + 16, e.LowerBody.LeftY.Calf.data.origY - 2), e.LowerBody.anim.prim.resetOrigin(e.LowerBody.data.origX + 30, e.LowerBody.data.origY - 7), e.UpperBody.anim.prim.resetOrigin(e.UpperBody.data.origX - 10, e.UpperBody.data.origY + 90), e.UpperBody.Head.data.old = {}, e.UpperBody.Head.data.old.origX = e.UpperBody.Head.data.origX - 75, e.UpperBody.Head.data.old.origY = e.UpperBody.Head.data.origY + 48, e.UpperBody.Head.data.temp = {}, e.UpperBody.Head.data.temp.origX = e.UpperBody.data.origX, e.UpperBody.Head.data.temp.origY = e.UpperBody.data.origY, e.UpperBody.Head.anim.prim.resetOrigin(e.UpperBody.data.origX, e.UpperBody.data.origY), e.UpperBody.Back.WingLeftY.anim.prim.resetOrigin(e.UpperBody.Head.data.old.origX + 0, e.UpperBody.Head.data.old.origY + 25), e.UpperBody.Back.WingRight.anim.prim.resetOrigin(e.UpperBody.Head.data.old.origX + 0, e.UpperBody.Head.data.old.origY + 25) } return e.element = element_group(a, e.data.id, e.data.origX, e.data.origY, e.data.scalX, e.data.scalY, e.data.tranX, e.data.tranY, e.data.rotat), e.all = [], e.all.push(e.element), e.eggrest = {}, r = e.element, i = e.UpperBody, d = e.name, n = t, i.Back.element = element_group(r, i.Back.data.id, i.data.origX, i.data.origY, i.data.scalX, i.data.scalY, i.data.tranX, i.data.tranY, i.data.rotat), i.Head.element = element_group(r, i.Head.data.id, i.Head.data.origX, i.Head.data.origY, i.Head.data.scalX, i.Head.data.scalY, i.Head.data.tranX, i.Head.data.tranY, i.Head.data.rotat), sub_body_Processing(e, i.Back.element, i.Back.Capes, !0, !1, n), sub_body_Processing(e, i.Back.element, i.Back.WingLeftY, !0, !1, n), sub_body_Processing(e, i.Back.element, i.Back.WingRight, !0, !1, n), sub_body_Processing(e, i.Head.element, i.Head.Hair.Hind, !0, !1, n), sub_body_Processing(e, i.Head.element, i.Head.Hair.Extra, !0, !1, n), sub_body_Processing(e, i.Head.element, i.Head, !1, !1, n), i.Head.Face.element = element_group(i.Head.element, i.Head.Face.data.id, i.data.origX, i.data.origY, i.data.scalX, i.data.scalY, i.data.tranX, i.data.tranY, i.data.rotat), i.Head.Hair.element = element_group(i.Head.element, i.Head.Hair.data.id, i.Head.data.origX, i.Head.data.origY, i.Head.data.scalX, i.Head.data.scalY, i.Head.data.tranX, i.Head.data.tranY, i.Head.data.rotat), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Emote, !0, !1, n), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Eyes, !0, !1, n), function a(e) { if (!isEmpty(e.gdata)) { var t = e.data.id + "eyes_mask", r = e.element.append("defs").attr("id", "defs_" + t); r.append("clipPath").attr("id", "clipPath_LeftY_eye_back" + t), r.append("clipPath").attr("id", "clipPath_Right_eye_back" + t), i(e.gdata.LeftYeye_back_elem.element, "clipPath_LeftY_eye_back" + t, "clipPath"), i(e.gdata.Righteye_back_elem.element, "clipPath_Right_eye_back" + t, "clipPath"), e.gdata.LeftYpupil_main_elem.element.attr("clip-path", "url(#clipPath_LeftY_eye_back" + t + ")"), e.gdata.Rightpupil_main_elem.element.attr("clip-path", "url(#clipPath_Right_eye_back" + t + ")"), e.gdata.LeftYgloss_elem.element.attr("clip-path", "url(#clipPath_LeftY_eye_back" + t + ")"), e.gdata.Rightgloss_elem.element.attr("clip-path", "url(#clipPath_Right_eye_back" + t + ")"), r.append("clipPath").attr("id", "clipPath_LeftY_pupil_main" + t), r.append("clipPath").attr("id", "clipPath_Right_pupil_main" + t), i(e.gdata.LeftYpupil_main_elem.element, "clipPath_LeftY_pupil_main" + t, "clipPath"), i(e.gdata.Rightpupil_main_elem.element, "clipPath_Right_pupil_main" + t, "clipPath"), void 0 != e.gdata.LeftYpupil_inner_elem && e.gdata.LeftYpupil_inner_elem.element.attr("clip-path", "url(#clipPath_LeftY_pupil_main" + t + ")"), void 0 != e.gdata.Rightpupil_inner_elem && e.gdata.Rightpupil_inner_elem.element.attr("clip-path", "url(#clipPath_Right_pupil_main" + t + ")") } function i(a, e, t) { a.selectAll("*").each(function () { var a = this.cloneNode(!0); a.id = this.id + t, a.removeAttribute("style"), d3.select("#" + e).node().appendChild(a) }) } }(i.Head.Face.Eyes), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Mouth, !0, !1, n), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Nose, !0, !1, n), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Ears, !0, !1, n), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Accessory, !0, !1, n), sub_body_Processing(e, i.Head.Face.element, i.Head.Face.Glasses, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.SpEarsRight, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.Back, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.Pony, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.Front, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.Tip, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Face.Eyebrows, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.SpEarsLeftY, !0, !1, n), sub_body_Processing(e, i.Head.Hair.element, i.Head.Hair.Accessory, !0, !1, n), e.all.push(i), e.all.push(i.Head), e.all.push(i.Head.Hair), e.all.push(i.Head.Face), function a(t, r, i, d) { var n = r.draw.Dime.bbox.x + r.draw.Dime.bbox.width * r.draw.Dime.magX, o = r.draw.Dime.bbox.y + r.draw.Dime.bbox.height * r.draw.Dime.magY; function s(a, t, r, i, d) { sub_body_Processing(e, a, t.Leg, r, i, d), sub_body_Processing(e, t.Leg.element, t.Calf, r, i, d), sub_body_Processing(e, t.Calf.element, t.Foot, r, i, d) } r.element = element_group(t, r.data.id, n, o, r.data.scalX, r.data.scalY, r.data.tranX, r.data.tranY, r.data.rotat), e.all.push(r), sub_body_Processing(e, r.element, r.Back.Tails, !0, !1, d), s(r.element, r.Right, !0, !0, d), s(r.element, r.LeftY, !0, !0, d), sub_body_Processing(e, t, r, !1, !0, d) }(e.element, e.LowerBody, e.name, t), function a(t, r, i, d) { function n(a, t, r, i, d) { sub_body_Processing(e, a, t.Arm, r, i, d), sub_body_Processing(e, t.Arm.element, t.Fore, r, i, d), sub_body_Processing(e, t.Fore.element, t.Hand, r, i, d) } r.element = element_group(t, r.data.id, r.data.origX, r.data.origY, r.data.scalX, r.data.scalY, r.data.tranX, r.data.tranY, r.data.rotat), n(r.element, r.Right, !0, !0, d), sub_body_Processing(e, t, r, !1, !0, d), sub_body_Processing(e, r.element, r.Head.Face.Neck, !0, !1, d), n(r.element, r.LeftY, !0, !0, d) }(e.element, e.UpperBody, e.name, t), function a(e, r, i) { function d(a, e, r) { var i = a.Clothes[e]; a.Clothes[e].draw.helper = [], a.Clothes[e].draw.Pathfull.forEach(function (t, r, i) { for (var d = a, n = 0; n < t.p.length; n++)d = d[t.p[n]]; var o = !0; a.Clothes[e].draw.helper.forEach(function (a, e, t) { a.desired_element_id === d.data.id && (o = !1) }), o && a.Clothes[e].draw.helper.push({ desired_element_id: d.data.id, desired_element: d, Pathfull: [] }) }), a.Clothes[e].draw.Pathfull.forEach(function (t, r, i) { for (var d = a, n = 0; n < t.p.length; n++)d = d[t.p[n]]; a.Clothes[e].draw.helper.forEach(function (a, e, r) { a.desired_element_id == d.data.id ? a.Pathfull.push(t) : a.Pathfull.push(!1) }) }); var d = []; a.Clothes[e].draw.helper.forEach(function (a, e, t) { var r = []; (r = JSON.parse(JSON.stringify(i))).draw.Pathfull = a.Pathfull, r.desired_element = a.desired_element, r.draw.helper = null, d.push(r) }), a.Clothes[e].draw.helper = d, a.Clothes[e].element = [], a.Clothes[e].draw.helper.forEach(function (r, i, d) { r.data.id = "part" + i + r.data.id, a.Clothes[e].element.push(sub_body_Processing(a, r.desired_element.addergroup, r, !0, !1, t)) }) } d(e, "ClothesBelt", i), d(e, "ClothesGloves", i), d(e, "ClothesPants", i), d(e, "ClothesShirt", i), d(e, "ClothesShoes", i), d(e, "ClothesSleeves", i) }(e, e.Clothes, e.name), d3.select("#dummyArea_" + e.name).remove(), d3.select("#FullChar_" + e.name).attr("transform-origin", e.UpperBody.data.origX + "px " + e.UpperBody.data.origY + "px"), e.test = async function () { async function a(a) { a.Foot.anim.prim.test(), await sleep(4500), a.Calf.anim.prim.test(), await sleep(4500), a.Leg.anim.prim.test(), await sleep(4500), a.Foot.anim.prim.test(), a.Calf.anim.prim.test(), a.Leg.anim.prim.test() } async function t(a) { a.Hand.anim.prim.test(), await sleep(4500), a.Fore.anim.prim.test(), await sleep(4500), a.Arm.anim.prim.test(), await sleep(4500), a.Hand.anim.prim.test(), a.Fore.anim.prim.test(), a.Arm.anim.prim.test() } console.log("=== ==> body_test_Lower_patrs"), a(e.LowerBody.LeftY), a(e.LowerBody.Right), await sleep(13500), console.log("=== ==> body_test_Upper_parts"), t(e.UpperBody.LeftY), t(e.UpperBody.Right), console.log("=== ==> body_test_Head"), e.UpperBody.Head.anim.prim.test(), await sleep(13500), console.log("=== ==> body_test_LowerBody"), e.LowerBody.anim.prim.test(), await sleep(4500), console.log("=== ==> body_test_UpperBody"), e.UpperBody.anim.prim.test(), await sleep(4500), console.log("=== ==> body_test_All"), console.log("==> Test Done") }, o(), e.movePupil = {}, e.movePupil.raw = async function (a, e) { e.actionDuration = void 0 === e.actionDuration ? 1e3 : e.actionDuration, e.del = void 0 === e.del ? 0 : e.del, e.ease = void 0 === e.ease ? d3.easeCubic : e.ease, a.selectAll("path").each(function () { var a = d3.select(this), t = a.attr("d").split(/(?=[LMC])/), r = t[0].trim().split(" "); r[1] = Number(r[1]) + e.x, r[2] = Number(r[2]) + e.y, t[0] = r.join(" "); var i = t.join(" "); d3.transition().duration(e.actionDuration).delay(e.del).ease(e.ease), a.transition().duration(e.actionDuration).attr("d", i) }) }, e.movePupil.LeftY = {}, e.movePupil.LeftY.pupilMain = async function (a) { let t = e.UpperBody.Head.Face.Eyes.gdata.LeftYpupil_main_elem.element; e.movePupil.raw(t, a) }, e.movePupil.LeftY.pupilInner = async function (a) { if (void 0 != e.UpperBody.Head.Face.Eyes.gdata.LeftYpupil_inner_elem) { let t = e.UpperBody.Head.Face.Eyes.gdata.LeftYpupil_inner_elem.element; e.movePupil.raw(t, a) } }, e.movePupil.LeftY.gloss = async function (a) { let t = e.UpperBody.Head.Face.Eyes.gdata.LeftYgloss_elem.element; e.movePupil.raw(t, a) }, e.movePupil.Right = {}, e.movePupil.Right.pupilMain = async function (a) { let t = e.UpperBody.Head.Face.Eyes.gdata.Rightpupil_main_elem.element; e.movePupil.raw(t, a) }, e.movePupil.Right.pupilInner = async function (a) { if (void 0 != e.UpperBody.Head.Face.Eyes.gdata.LeftYpupil_inner_elem) { let t = e.UpperBody.Head.Face.Eyes.gdata.Rightpupil_inner_elem.element; e.movePupil.raw(t, a) } }, e.movePupil.Right.gloss = async function (a) { let t = e.UpperBody.Head.Face.Eyes.gdata.Rightgloss_elem.element; e.movePupil.raw(t, a) }, console.log("Builder Output of Char: " + e.name + " <->", e), e } function sub_body_Processing(a, e, t, r, i, d) { var n = t.draw; n.Pathfull.length != n.Data.length && console.error("The Poly and data are not in sycn for ID:" + t.data.id); var o = n.Dime.bbox.x + n.Dime.bbox.width * n.Dime.magX, s = n.Dime.bbox.y + n.Dime.bbox.height * n.Dime.magY; r && (t.element = element_group(e, t.data.id, o, s, t.data.scalX, t.data.scalY, t.data.tranX, t.data.tranY, t.data.rotat), a.all.push(t)), t.anim.prim = anim_Standard_data(a, t, a.name, e, t.partnames), d && element_circle(t.element, "Origin_Rotate_" + t.data.id, o, s, 10, "Red", "Red", 1, 1, 1, 0, 0, 0), d && element_circle(t.element, "Origin_LeftY_" + t.data.id, n.Dime.bbox.x, s, 1, "Gray", "Gray", 1, 1, 1, 0, 0, 0), d && element_circle(t.element, "Origin_Right_" + t.data.id, n.Dime.bbox.x + n.Dime.bbox.width, s, 1, "Gray", "Gray", 1, 1, 1, 0, 0, 0), parseInt(t.data.origX), n.Dime.maxX, parseInt(t.data.origX), n.Dime.minX, n.Dime.magX, t.colorGroup.forEach(function (a, e, r) { addColorGroup(t, a, e) }), t.lineGroup.forEach(function (a, e, r) { addLineGroup(t, a, e) }), t.gdata = {}; let l = [0, 0]; return needed = !0, n.Pathfull.forEach(function (e, r, i) { if (!1 != e) { if (bpd_ele = t.element, void 0 != e.g) { needed && (l = e.d.split(/(?=[LMC])/)[0].trim().split(" "), needed = !1), id_string = "", next_elem = null, cuur_elem = t.element, t.gdata; for (var d = 0, o = [], s = 0; s < e.g.length; s++) { id_string += e.g[s], t.partID = t.data.id + id_string, d = Rotation_points(t, a.name.replace(".", "_"), e, o, 0, 0, 0, d, !1, l); var c = { x: Number(0) + Number(l[1]), y: Number(0) + Number(l[2]), width: 0, height: d }, p = c.x + 1 * c.width, m = c.y + 1 * c.height; (next_elem = d3.select("#" + t.data.id + id_string)).empty() && (next_elem = element_group(cuur_elem, t.data.id + id_string, p, m, t.data.scalX, t.data.scalY, t.data.tranX, t.data.tranY, t.data.rotat), t.gdata[id_string + "_elem"] = { element: next_elem }), cuur_elem = next_elem } bpd_ele = cuur_elem } !1 != t.colorGroup[e.c - 1] && element_path(bpd_ele, "PathPoly_" + (r + 1) + t.data.id, e.d, n.Data[r].scalX, n.Data[r].scalY, n.Data[r].tranX, n.Data[r].tranY, n.Data[r].rotat, "url(#ColorGradient_" + e.c + t.data.id + ")", n.Data[e.c - 1].fillop, "Black", n.Data[r].strokW, 0), !1 != t.lineGroup[e.c - 1] && element_path(bpd_ele, "PathLine_" + (r + 1) + t.data.id, e.d, n.Data[r].scalX, n.Data[r].scalY, n.Data[r].tranX, n.Data[r].tranY, n.Data[r].rotat, "url(#LineGradient_" + e.c + t.data.id + ")", 0, "url(#LineGradient_" + e.c + t.data.id + ")", n.Data[e.c - 1].strokW, n.Data[r].strokop, "round", "butt") } }), i && (t.addergroup = element_group(t.element, t.data.id + "addergroup", o, s, t.data.scalX, t.data.scalY, t.data.tranX, t.data.tranY, t.data.rotat)), t.element } function addPathData() { } function addLineGroup(a, e, t) { !1 != e && (1 == e.type ? element_linearGradient(a.element, "LineGradient_" + (t + 1) + a.data.id, 0, 0, 0, 100, e.color) : 2 == e.type ? element_radialGradient(a.element, "LineGradient_" + (t + 1) + a.data.id, e.color) : (element_radialGradient(a.element, "LineGradient_" + (t + 1) + a.data.id, 0, e.color), console.error("bodyPartData.colortype was not 1,2 for ID:" + a.data.id))) } function addColorGroup(a, e, t) { !1 != e && (1 == e.type ? void 0 === e.cord ? void 0 === e.gradient ? element_linearGradient(a.element, "ColorGradient_" + (t + 1) + a.data.id, 0, 0, 0, 100, e.color) : element_linearGradient(a.element, "ColorGradient_" + (t + 1) + a.data.id, 100 * Number(e.gradient.x1), 100 * Number(e.gradient.y1), 100 * Number(e.gradient.x2), 100 * Number(e.gradient.y2), e.color) : (console.log("cord ASD"), element_linearGradient(a.element, "ColorGradient_" + (t + 1) + a.data.id, e.cord.x1, e.cord.y1, e.cord.x2, e.cord.y2, e.color)) : 2 == e.type ? element_radialGradient(a.element, "ColorGradient_" + (t + 1) + a.data.id, e.color) : (element_radialGradient(a.element, "ColorGradient_" + (t + 1) + a.data.id, 0, e.color), console.error("bodyPartData.colortype was not 1,2 for ID:" + a.data.id))) } function multiBodyBuilder(a, e) { var t = []; return a.forEach(function (a, r, i) { t.push(BodyBuilder(a.Z_FSTS, a, e)) }), t } function anim_Standard_data(a, e, t, r, i) { var d = {}; return d.test = async function () { console.log("==> X and Y rotation to 200 for " + e.data.id), e.element.transition().duration(500).style("transform", "rotate(200deg)"), await sleep(500), console.log("==> X and Y rotation to  for " + e.data.id), e.element.transition().duration(500).style("transform", "rotate(0deg)"), await sleep(500), console.log("==> Turn left for " + e.data.id), e.element.transition().duration(500).style("transform", "skewY(30deg)"), await sleep(500), console.log("==> Turn right for " + e.data.id), e.element.transition().duration(500).style("transform", "skewY(330deg)"), await sleep(500), console.log("==> Scale in  for " + e.data.id), e.element.transition().duration(500).style("transform", "scale(1,0.5)"), await sleep(500), console.log("==> Scale out for " + e.data.id), e.element.transition().duration(500).style("transform", "scale(1,1)"), await sleep(500), console.log("==> Scale in  for " + e.data.id), e.element.transition().duration(500).style("transform", "scale(1,0.5)"), await sleep(500), console.log("==> Scale out for " + e.data.id), e.element.transition().duration(500).style("transform", "scale(1,1)"), await sleep(500) }, d.addEggrest = async function (t) { return new Promise(async function (r, i) { try { let d = "Eggrest_" + e.data.id; var n = d3.select(`#${d}`); n.empty() && (n = element_group(e.element, d, a.data.origX, a.data.origY, 1, 1, 0, 0, 0, !0, ":first-child")); let o = await fetch(t), s = await o.text(), l = new DOMParser, c = l.parseFromString(s, "image/svg+xml"), p = d3.select(c).select("svg").node(), m = Array.from(p.childNodes), $ = d3.select(`#${d}`).node(); for (let g of m) $.appendChild(g); element_group(d3.select(`#${d}`), "Eggrest_img_" + e.data.id, 0, 0, 1, 1, 0, 0, 0) } catch (u) { console.error("Failed to copy SVG content:", u) } r() }) }, d.EggrestTransform = async function (a) { return new Promise(async function (t, r) { void 0 == a.dur && (a.dur = 0), void 0 == a.del && (a.del = 0), void 0 == a.scalX && (a.scalX = 0), void 0 == a.scalY && (a.scalY = 0), void 0 == a.tranX && (a.tranX = 0), void 0 == a.tranY && (a.tranY = 0), void 0 == a.skewX && (a.skewX = 0), void 0 == a.skewY && (a.skewY = 0), void 0 == a.rotat && (a.rotat = 0), void 0 == a.ease && (a.ease = d3.easeCubic); let i = "Eggrest_" + e.data.id; isEmpty(e.Eggrest) || void 0 == e.Eggrest ? (e.Eggrest = {}, e.Eggrest.data = {}, e.Eggrest.data.scalX = 1 + a.scalX, e.Eggrest.data.scalY = 1 + a.scalY, e.Eggrest.data.tranX = 0 + a.tranX, e.Eggrest.data.tranY = 0 + a.tranY, e.Eggrest.data.skewX = 0 + a.skewX, e.Eggrest.data.skewY = 0 + a.skewY, e.Eggrest.data.rotat = 0 + a.rotat) : (e.Eggrest.data.scalX = e.Eggrest.data.scalX + a.scalX, e.Eggrest.data.scalY = e.Eggrest.data.scalY + a.scalY, e.Eggrest.data.tranX = e.Eggrest.data.tranX + a.tranX, e.Eggrest.data.tranY = e.Eggrest.data.tranY + a.tranY, e.Eggrest.data.skewX = e.Eggrest.data.skewX + a.skewX, e.Eggrest.data.skewY = e.Eggrest.data.skewY + a.skewY, e.Eggrest.data.rotat = e.Eggrest.data.rotat + a.rotat); var d = d3.transition().duration(a.dur).delay(a.del).ease(a.ease); let n = "scale(" + e.Eggrest.data.scalX + "," + e.Eggrest.data.scalY + ")  translate(" + e.Eggrest.data.tranX + "," + e.Eggrest.data.tranY + ")  rotate(" + e.Eggrest.data.rotat + ") skewX(" + e.Eggrest.data.skewX + ") skewY(" + e.Eggrest.data.skewY + ")"; console.log(n), d3.select(`#${i}`).transition(d).attr("transform", n), await sleep((a.dur + a.del) * 1), t() }) }, d.clearEggrest = async function () { return new Promise(async function (a, t) { let r = d3.select(`#${"Eggrest_" + e.data.id}`); r.selectAll("*").remove(), r.attr("transform", " "), e.Eggrest.data.scalX = 1, e.Eggrest.data.scalY = 1, e.Eggrest.data.tranX = 0, e.Eggrest.data.tranY = 0, e.Eggrest.data.skewX = 0, e.Eggrest.data.skewY = 0, e.Eggrest.data.rotat = 0, a() }) }, d.addImage = async function (a, t, r, i, d) { let n = d3.select("#Eggrest_img_" + e.data.id); console.log(n.node()), console.log("#Eggrest_img_" + e.data.id), n.insert("image").attr("href", a).attr("width", t).attr("height", r).attr("x", i).attr("y", d) }, d.addEggrestImg = async function (e, t, r) { return new Promise(async function (i, d) { await a.anim.prim.addEggrest(e), a.anim.prim.addImage(t, r.width, r.height, r.x, r.y), i() }) }, d.gdataTransform = function (a, e) { return new Promise(async function (t, r) { void 0 == e.dur && (e.dur = 0), void 0 == e.del && (e.del = 0), void 0 == e.scalX && (e.scalX = 0), void 0 == e.scalY && (e.scalY = 0), void 0 == e.tranX && (e.tranX = 0), void 0 == e.tranY && (e.tranY = 0), void 0 == e.skewX && (e.skewX = 0), void 0 == e.skewY && (e.skewY = 0), void 0 == e.rotat && (e.rotat = 0), void 0 == e.ease && (e.ease = d3.easeCubic), isEmpty(a.part) || void 0 == a.part ? (a.part = {}, a.part.data = {}, a.part.data.scalX = 1 + e.scalX, a.part.data.scalY = 1 + e.scalY, a.part.data.tranX = 0 + e.tranX, a.part.data.tranY = 0 + e.tranY, a.part.data.skewX = 0 + e.skewX, a.part.data.skewY = 0 + e.skewY, a.part.data.rotat = 0 + e.rotat) : (a.part.data.scalX = a.part.data.scalX + e.scalX, a.part.data.scalY = a.part.data.scalY + e.scalY, a.part.data.tranX = a.part.data.tranX + e.tranX, a.part.data.tranY = a.part.data.tranY + e.tranY, a.part.data.skewX = a.part.data.skewX + e.skewX, a.part.data.skewY = a.part.data.skewY + e.skewY, a.part.data.rotat = a.part.data.rotat + e.rotat); var i = d3.transition().duration(e.dur).delay(e.del).ease(e.ease); let d = "scale(" + a.part.data.scalX + "," + a.part.data.scalY + ")  translate(" + a.part.data.tranX + "," + a.part.data.tranY + ")  rotate(" + a.part.data.rotat + ") skewX(" + a.part.data.skewX + ") skewY(" + a.part.data.skewY + ")"; a.element.transition(i).attr("transform", d), await sleep(e.dur + e.del), t() }) }, d.addTransform = function (a) { return new Promise(async function (t, r) { void 0 == a.dur && (a.dur = 0), void 0 == a.del && (a.del = 0), void 0 == a.scalX && (a.scalX = 0), void 0 == a.scalY && (a.scalY = 0), void 0 == a.tranX && (a.tranX = 0), void 0 == a.tranY && (a.tranY = 0), void 0 == a.skewX && (a.skewX = 0), void 0 == a.skewY && (a.skewY = 0), void 0 == a.rotat && (a.rotat = 0), void 0 == a.ease && (a.ease = d3.easeCubic); var i = d3.transition().duration(a.dur).delay(a.del).ease(a.ease); e.data.scalX = e.data.scalX + a.scalX, e.data.scalY = e.data.scalY + a.scalY, e.data.tranX = e.data.tranX + a.tranX, e.data.tranY = e.data.tranY + a.tranY, e.data.skewX = e.data.skewX + a.skewX, e.data.skewY = e.data.skewY + a.skewY, e.data.rotat = e.data.rotat + a.rotat, e.element.transition(i).attr("transform", "scale(" + e.data.scalX + "," + e.data.scalY + ")  translate(" + e.data.tranX + "," + e.data.tranY + ")  rotate(" + e.data.rotat + ") skewX(" + e.data.skewX + ") skewY(" + e.data.skewY + ")"), await sleep((a.dur + a.del) * 1), t() }) }, d.modTransform = function (a) { return new Promise(async function (e, t) { void 0 == a.dur && (a.dur = 0), void 0 == a.del && (a.del = 0), void 0 == a.scalX && (a.scalX = 0), void 0 == a.scalY && (a.scalY = 0), void 0 == a.tranX && (a.tranX = 0), void 0 == a.tranY && (a.tranY = 0), void 0 == a.skewX && (a.skewX = 0), void 0 == a.skewY && (a.skewY = 0), void 0 == a.rotat && (a.rotat = 0), void 0 == a.ease && (a.ease = d3.easeCubic), void 0 != a.d && (a.d = void 0 === a.d ? {} : a.d, a.d.dur = void 0 === a.d.dur ? 1 : a.d.dur, a.d.tranX = void 0 === a.d.tranX ? 1 : a.d.tranX, a.d.tranY = void 0 === a.d.tranY ? 1 : a.d.tranY, a.d.scalX = void 0 === a.d.scalX ? 1 : a.d.scalX, a.d.scalY = void 0 === a.d.scalY ? 1 : a.d.scalY, a.d.skewX = void 0 === a.d.skewX ? 1 : a.d.skewX, a.d.skewY = void 0 === a.d.skewY ? 1 : a.d.skewY, a.d.rotat = void 0 === a.d.rotat ? 1 : a.d.rotat, a.dur = a.dur * a.d.dur, a.tranX = a.tranX * a.d.tranX, a.tranY = a.tranY * a.d.tranY, a.scalX = a.scalX * a.d.scalX, a.scalY = a.scalY * a.d.scalY, a.skewX = a.skewX * a.d.skewX, a.skewY = a.skewY * a.d.skewY, a.rotat = a.rotat * a.d.rotat), void 0 != a.s && (a.s.dur = void 0 === a.s.dur ? 0 : a.s.dur, a.s.tranX = void 0 === a.s.tranX ? 0 : a.s.tranX, a.s.tranY = void 0 === a.s.tranY ? 0 : a.s.tranY, a.s.scalX = void 0 === a.s.scalX ? 0 : a.s.scalX, a.s.scalY = void 0 === a.s.scalY ? 0 : a.s.scalY, a.s.skewX = void 0 === a.s.skewX ? 0 : a.s.skewX, a.s.skewY = void 0 === a.s.skewY ? 0 : a.s.skewY, a.s.rotat = void 0 === a.s.rotat ? 0 : a.s.rotat, a.dur = a.dur + a.s.dur, a.tranX = a.tranX + a.s.tranX, a.tranY = a.tranY + a.s.tranY, a.scalX = a.scalX + a.s.scalX, a.scalY = a.scalY + a.s.scalY, a.skewX = a.skewX + a.s.skewX, a.skewY = a.skewY + a.s.skewY, a.rotat = a.rotat + a.s.rotat), void 0 != a.m && (a.m.frameSensitivity = void 0 === a.m.frameSensitivity ? 1 : a.m.frameSensitivity, a.m.timeModifier = void 0 === a.m.timeModifier ? 1 : a.m.timeModifier, a.m.rotationModifier = void 0 === a.m.rotationModifier ? 1 : a.m.rotationModifier, a.m.translationModifier = void 0 === a.m.translationModifier ? 1 : a.m.translationModifier, a.m.translationModifierX = void 0 === a.m.translationModifierX ? 1 : a.m.translationModifierX, a.m.translationModifierY = void 0 === a.m.translationModifierY ? 1 : a.m.translationModifierY, a.m.skewingModifier = void 0 === a.m.skewingModifier ? 1 : a.m.skewingModifier, a.m.skewingModifierX = void 0 === a.m.skewingModifierX ? 1 : a.m.skewingModifierX, a.m.skewingModifierY = void 0 === a.m.skewingModifierY ? 1 : a.m.skewingModifierY, a.m.scalingModifier = void 0 === a.m.scalingModifier ? 1 : a.m.scalingModifier, a.m.scalingModifierX = void 0 === a.m.scalingModifierX ? 1 : a.m.scalingModifierX, a.m.scalingModifierY = void 0 === a.m.scalingModifierY ? 1 : a.m.scalingModifierY, a.m.modifierX = void 0 === a.m.modifierX ? 1 : a.m.modifierX, a.m.modifierY = void 0 === a.m.modifierY ? 1 : a.m.modifierY, a.dur = a.dur * a.m.timeModifier, a.tranX = a.tranX * a.m.translationModifierX * a.m.translationModifier * a.m.frameSensitivity * a.m.modifierX, a.tranY = a.tranY * a.m.translationModifierY * a.m.translationModifier * a.m.frameSensitivity * a.m.modifierY, a.scalX = a.scalX * a.m.scalingModifierX * a.m.scalingModifier * a.m.frameSensitivity * a.m.modifierX, a.scalY = a.scalY * a.m.scalingModifierY * a.m.scalingModifier * a.m.frameSensitivity * a.m.modifierY, a.skewX = a.skewX * a.m.skewingModifierX * a.m.skewingModifier * a.m.frameSensitivity * a.m.modifierX, a.skewY = a.skewY * a.m.skewingModifierY * a.m.skewingModifier * a.m.frameSensitivity * a.m.modifierY, a.rotat = a.rotat * a.m.rotationModifier * a.m.frameSensitivity), void 0 != a.p && (a.p.frameAdjuster = void 0 === a.p.frameAdjuster ? 0 : a.p.frameAdjuster, a.p.timeAdder = void 0 === a.p.timeAdder ? 0 : a.p.timeAdder, a.p.rotationAdder = void 0 === a.p.rotationAdder ? 0 : a.p.rotationAdder, a.p.translationAdder = void 0 === a.p.translationAdder ? 0 : a.p.translationAdder, a.p.translationAdderX = void 0 === a.p.translationAdderX ? 0 : a.p.translationAdderX, a.p.translationAdderY = void 0 === a.p.translationAdderY ? 0 : a.p.translationAdderY, a.p.skewingAdder = void 0 === a.p.skewingAdder ? 0 : a.p.skewingAdder, a.p.skewingAdderX = void 0 === a.p.skewingAdderX ? 0 : a.p.skewingAdderX, a.p.skewingAdderY = void 0 === a.p.skewingAdderY ? 0 : a.p.skewingAdderY, a.p.scalingAdder = void 0 === a.p.scalingAdder ? 0 : a.p.scalingAdder, a.p.scalingAdderX = void 0 === a.p.scalingAdderX ? 0 : a.p.scalingAdderX, a.p.scalingAdderY = void 0 === a.p.scalingAdderY ? 0 : a.p.scalingAdderY, a.p.adderX = void 0 === a.p.adderX ? 0 : a.p.adderX, a.p.adderY = void 0 === a.p.adderY ? 0 : a.p.adderY, a.dur = a.dur + a.p.timeAdder, a.tranX = a.tranX + a.p.translationAdderX + a.p.translationAdder + a.p.frameAdjuster + a.p.adderX, a.tranY = a.tranY + a.p.translationAdderY + a.p.translationAdder + a.p.frameAdjuster + a.p.adderY, a.scalX = a.scalX + a.p.scalingAdderX + a.p.scalingAdder + a.p.frameAdjuster + a.p.adderX, a.scalY = a.scalY + a.p.scalingAdderY + a.p.scalingAdder + a.p.frameAdjuster + a.p.adderY, a.skewX = a.skewX + a.p.skewingAdderX + a.p.skewingAdder + a.p.frameAdjuster + a.p.adderX, a.skewY = a.skewY + a.p.skewingAdderY + a.p.skewingAdder + a.p.frameAdjuster + a.p.adderY, a.rotat = a.rotat + a.p.rotationAdder + a.p.frameAdjuster), await d.addTransform(a), e() }) }, d.setTransform = function (a) { return new Promise(async function (t, r) { void 0 == a.dur && (a.dur = 0), void 0 == a.del && (a.del = 0), void 0 == a.scalX && (a.scalX = 1), void 0 == a.scalY && (a.scalY = 1), void 0 == a.tranX && (a.tranX = 0), void 0 == a.tranY && (a.tranY = 0), void 0 == a.skewX && (a.skewX = 0), void 0 == a.skewY && (a.skewY = 0), void 0 == a.rotat && (a.rotat = 0), void 0 == a.ease && (a.ease = d3.easeCubic); var i = d3.transition().duration(a.dur).delay(a.del).ease(a.ease); e.data.scalX = e.data.scalX - (e.data.scalX - a.scalX), e.data.scalY = e.data.scalY - (e.data.scalY - a.scalY), e.data.tranX = e.data.tranX - (e.data.tranX - a.tranX), e.data.tranY = e.data.tranY - (e.data.tranY - a.tranY), e.data.skewX = e.data.skewX - (e.data.skewX - a.skewX), e.data.skewY = e.data.skewY - (e.data.skewY - a.skewY), e.data.rotat = e.data.rotat - (e.data.rotat - a.rotat), e.element.transition(i).attr("transform", "scale(" + e.data.scalX + "," + e.data.scalY + ")  translate(" + e.data.tranX + "," + e.data.tranY + ")  rotate(" + e.data.rotat + ") skewX(" + e.data.skewX + ") skewY(" + e.data.skewY + ")"), await sleep((a.dur + a.del) * 1), t() }) }, d.moveTransform = function (a) { return new Promise(async function (t, r) { void 0 == a.dur && (a.dur = 0), void 0 == a.del && (a.del = 0), void 0 == a.scalX && (a.scalX = e.data.scalX), void 0 == a.scalY && (a.scalY = e.data.scalY), void 0 == a.tranX && (a.tranX = e.data.tranX), void 0 == a.tranY && (a.tranY = e.data.tranY), void 0 == a.skewX && (a.skewX = e.data.skewX), void 0 == a.skewY && (a.skewY = e.data.skewY), void 0 == a.rotat && (a.rotat = e.data.rotat), void 0 == a.ease && (a.ease = d3.easeCubic), void 0 == a.ease && (a.ease = d3.easeCubic); var i = d3.transition().duration(a.dur).delay(a.del).ease(a.ease), d = e.element.node().getBBox(); e.data.tranX = a.tranX - d.x - e.data.tranX, e.data.tranY = a.tranY - d.y - e.data.tranY, e.element.transition(i).attr("transform", "scale(" + e.data.scalX + "," + e.data.scalY + ")  translate(" + e.data.tranX + "," + e.data.tranY + ")  rotate(" + e.data.rotat + ") skewX(" + e.data.skewX + ") skewY(" + e.data.skewY + ")"), await sleep((a.dur + a.del) * 1), t() }) }, d.resetOrigin = function (a, t) { e.data.origX = a, e.data.origY = t, e.element.attr("transform-origin", a + "px " + t + "px") }, d.resetFullBodyOrigin = function (a, t) { function r(a, e, t) { originx3 = parseInt(a.data.origX) + parseInt(e), originy3 = parseInt(a.data.origY) + parseInt(t), a.anim.prim.resetOrigin(originx3, originy3) } e.anim.prim.resetMovetoOrigin(a, t), r(e.UpperBody, a, t), r(e.UpperBody.Head, a, t), r(e.UpperBody.Head.Hair, a, t), r(e.UpperBody.Head.Face, a, t), r(e.UpperBody.LeftY.Arm, a, t), r(e.UpperBody.LeftY.Fore, a, t), r(e.UpperBody.LeftY.Hand, a, t), r(e.UpperBody.Right.Arm, a, t), r(e.UpperBody.Right.Fore, a, t), r(e.UpperBody.Right.Hand, a, t), r(e.LowerBody, a, t), r(e.LowerBody.LeftY.Leg, a, t), r(e.LowerBody.LeftY.Calf, a, t), r(e.LowerBody.LeftY.Foot, a, t), r(e.LowerBody.Right.Leg, a, t), r(e.LowerBody.Right.Calf, a, t), r(e.LowerBody.Right.Foot, a, t) }, d.resetMovetoOrigin = function (a, t, r) { var i = e.element.node().getBBox(), d = a - i.x - i.width / 2, n = t - i.y - i.height / 2; e.element.attr("transform-origin", a + "px " + t + "px"), e.data.tranX = e.data.tranX + d, e.data.tranY = e.data.tranY + n, e.element.attr("transform", "scale(" + e.data.scalX + "," + e.data.scalY + ")  translate(" + e.data.tranX + "," + e.data.tranY + ")  rotate(" + e.data.rotat + ") ") }, d.resetAndMove = function (t, r, i, d, n = 0, o = 0) { return new Promise(async function (s, l) { let c = e.element, p = c.node().getBBox(), m = p.x + p.width / 2, $ = p.y + p.height / 2, g = t - m, u = r - $; c.style("transform-origin", `${t}px ${r}px`); let f = i - t + g, w = d - r + u; c.transition().duration(0).attr("transform", `translate(${g}, ${u})`); let y = d3.transition().duration(n).delay(o).ease(d3.easeCubic); c.transition(y).attr("transform", `translate(${f}, ${w})`), e.data.tranX = f, e.data.tranY = w, a.data.origX = t, a.data.origY = r, await sleep(n + o), s() }) }, d.resetAndTransform = function (a, t, r, i, d) { return new Promise(async function (n, o) { void 0 == d.dur && (d.dur = 1e3), void 0 == d.del && (d.del = 0), void 0 == d.scalX && (d.scalX = e.data.scalX), void 0 == d.scalY && (d.scalY = e.data.scalY), void 0 == d.skewX && (d.skewX = e.data.skewX), void 0 == d.skewY && (d.skewY = e.data.skewY), void 0 == d.rotat && (d.rotat = e.data.rotat), void 0 == d.ease && (d.ease = d3.easeCubic); let s = e.element, l = s.node().getBBox(), c = l.x + l.width / 2, p = l.y + l.height / 2, m = a - c, $ = t - p; s.style("transform-origin", `${a}px ${t}px`); let g = r - a + m; s.transition().duration(0).attr("transform", `translate(${m}, ${$})`); let u = d3.transition().duration(0).delay(0).ease(d3.easeCubic); s.transition(u).attr("transform", `translate(${g}, ${$}) scale(${d.scalX}, ${d.scalY}) skewX(${d.skewX}) skewY(${d.skewY}) rotate(${d.rotat})`), e.data.tranX = g, e.data.tranY = i - t + $, e.data.scalX = d.scalX, e.data.scalY = d.scalY, e.data.skewX = d.skewX, e.data.skewY = d.skewY, e.data.rotat = d.rotat, await sleep(d.dur + d.del), n() }) }, d.switchPathData = function (a) { return new Promise(async function (t, r) { void 0 == a.newColor && (a.newColor = a.num), void 0 == a.newLine && (a.newLine = a.num), void 0 == a.ease && (a.ease = d3.easeSinOut); let i = e.lineGroup[a.newLine - 1]; function d() { for (var a = "#", e = 0; e < 6; e++)a += "0123456789ABCDEF"[Math.floor(16 * Math.random())]; return a } void 0 == i && (i = { w: 1 }), d3.select("#PathPoly_" + a.num + e.data.id).transition().duration(a.dur).delay(a.del).ease(a.ease).attr("d", a.data), d3.select("#PathPoly_" + a.num + e.data.id).style("fill", "url(#ColorGradient_" + a.num + e.data.id + ")"), d3.select("#PathLine_" + a.num + e.data.id).transition().duration(a.dur).delay(a.del).ease(a.ease).attr("d", a.data), d3.select("#PathLine_" + a.num + e.data.id).style("stroke", "url(#LineGradient_" + a.num + e.data.id + ")"), await sleep(a.dur + a.del), t() }) }, d.updateGradients = function (a, t, r, i) { let d = "Color"; d = r ? "Color" : "Line"; let n = `${d}Gradient_${t}${e.data.id}`, o = d3.select(`#${n}`); if (o.selectAll("stop").remove(), a ? a.color.forEach(a => { o.append("stop").attr("offset", `${a.offset}%`).attr("stop-color", a.color).attr("stop-opacity", a.opacity) }) : o.append("stop").attr("offset", "100%").attr("stop-color", "RED").attr("stop-opacity", "0"), void 0 != i) { let s = `PathLine_${t}${e.data.id}`; d3.select(`#${s}`).style("stroke-width", i) } }, d.switchGradientData = function (a) { return new Promise(async function (t, r) { void 0 == a.id1 && (a.id1 = "#ColorGradient_" + a.num + e.data.id), void 0 == a.id2 && (a.id2 = "#ColorGradient_" + a.newColor + e.data.id), void 0 == a.newColor && (a.newColor = a.num); var i = d3.select(a.id1), d = d3.select(a.id2), n = i.selectAll("stop"), o = d.selectAll("stop"), s = n.size(), l = o.size(), c = n.nodes().map(function (a) { return { color: d3.select(a).style("stop-color"), offset: d3.select(a).attr("offset") } }); d3.easeCubic, s > l && n.filter(function (a, e) { return e >= l }).remove(), (n = i.selectAll("stop")).each(function (e, t) { var r = d3.select(this), i = d3.select(o.nodes()[t]).style("stop-color"); r.transition().duration(a.dur).delay(a.del).ease(a.ease).style("stop-color", i) }), console.log(c) }) }, d.switchElementData = function (d, n) { return new Promise(async function (o, s) { 1 == i.length && (i[1] = ""), console.log(n), console.log(e, n.newElement.ver), console.log(e.colorMap, n.newElement.ver); let l = d[e.colorMap][n.newElement.ver]; console.log(l), void 0 != n.newColor && (l = await d3.json(n.newColor)), d3.select("#" + e.data.id).selectAll("*").remove(); let c = { bodyLineColorWi: 1, [i[0] + i[1]]: l }; c[i[0] + i[1]].colorName = l.name, c[i[0] + i[1]].colorMap = e.colorMap, element_group(a.element, "dummyArea_" + a.name, 0, 0, 1, 1, 0, 0, 0), adjustPathCoordinates(n.newElement.part, n.x, n.y), part_Standard_data(a, r, i[0], i[1], c, n.newElement, t), o() }) }, d.switchElement = function () { return new Promise(async function (t, i) { e.element = d3.select("#" + e.data.id), sub_body_Processing(a, r.element, e, !1, !1, !1), t() }) }, d } function anim_MouthSpeak_fun(a) { function e(e, t, r, i) { return new Promise(async function (i, d) { "A" == (e = e.toUpperCase()) ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.A }), i()) : "E" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.E }), i()) : "W" == e || "R" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.WR }), i()) : "T" == e || "S" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.TS }), i()) : "L" == e || "N" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.LN }), i()) : "Q" == e || "U" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.QU }), i()) : "M" == e || "B" == e || "P" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.MBP }), i()) : "F" == e || "V" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.FV }), i()) : "O" == e ? (await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: r, del: 0, data: t.part.O }), i()) : "," == e ? (await sleep(1.55 * r), i()) : "\r\n" == e || "\n" == e ? (await sleep(1.75 * r), i()) : " " == e ? (await sleep(.5 * r), i()) : (await sleep(.05 * r), i()) }) } a.anim.prim.mouthSpeak = function (t, r, i, d) { return new Promise(async function (n, o) { console.log("Start", d); for (var s = 0; s < d.length; s++)await e(d.charAt(s), t, r, i); await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: 1.75 * r, del: 1.75 * i, data: a.UpperBody.Head.Face.Mouth.draw.Pathfull[0].d }), n() }) }; let t = { A: "A", E: "E", W: "WR", R: "WR", T: "TS", S: "TS", L: "LN", N: "LN", Q: "QU", U: "QU", M: "MBP", B: "MBP", P: "MBP", F: "FV", V: "FV", O: "O" }; async function r(e, r, i) { let d = r.part[t[e]]; d ? await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: i, del: 0, data: d }) : console.error(`No path data found for phoneme: ${e}`) } a.anim.prim.mouthSpeak2 = function (e, i, d) { return new Promise(async function (n, o) { let s = d.toUpperCase().split(""), l = null, c = s.map((a, e) => ({ char: a, index: e })).filter(a => { let e = t[a.char]; return e && e !== l ? (l = e, !0) : (" " === a.char || "," === a.char) && (l = null, !0) }); console.log(d); let p = i / c.length; for (let m = 0; m < c.length; m++) { let $ = c[m], g = c[m + 1] || null, u; if (" " === $.char) u = p; else if ("," === $.char) u = p; else { let f = g ? g.index - $.index : d.length - $.index; u = p * f } t[$.char] ? await r($.char, e, u) : await sleep(u) } await a.UpperBody.Head.Face.Mouth.anim.prim.switchPathData({ num: 1, dur: p, del: 0, data: a.UpperBody.Head.Face.Mouth.draw.Pathfull[0].d }), n() }) } } function getBodyIndexMap() { return { NakedBody: 0, Other: 30, HairFront: 1, HairBack: 2, HairTip: 3, HairHind: 4, HairPony: 5, HairSpEarsLeftY: 22, HairSpEarsRight: 23, HairAccessory: 26, HairExtra: 27, FaceEyes: 8, FaceEyeLeftY: 31, FaceEyeRight: 32, FaceEyebrowsLeftY: 33, FaceEyebrowsRight: 34, FaceEyebrows: 7, FacePupils: -999, FaceGlasses: 9, FaceMouth: 10, FaceAccessory: 6, FaceEmote: 11, FaceNose: 24, FaceNeck: 25, FaceEars: 28, ClothesBelt: 12, ClothesGloves: 13, ClothesPants: 14, ClothesShirt: 15, ClothesShoes: 16, ClothesSleeves: 17, BackWingLeftY: 18, BackWingRight: 19, BackCapes: 20, BackTails: 21 } } async function make(a) { return new Promise(async function (e, t) { testing = !1, anim_MouthSpeak_fun(a), anim_lib_Basic(a); var r = d3.select("#Full_SVG_Test_Space"); element_group(r, "dummyArea_" + a.name, 0, 0, 1, 1, 0, 0, 0), (a = BodyBuilder(r, a, testing)).anim.prim = anim_Standard_data(a, a, a.name), e(a) }) } async function processChar(a, e) { let t = { ...a }; for (let r of (delete t.assets, BodyIndexMap = getBodyIndexMap(), a.assets)) for (let [i, d] of Object.entries(r)) try { if ("string" == typeof d.colorfile) { let n = await d3.json(d.colorfile); n.ver === d.ver ? t[i] = n : console.error(`Version mismatch for ${i}`) } else t[i] = e[BodyIndexMap[i]][d.ver]; void 0 != d.x && (t[i].x = d.x), void 0 != d.y && (t[i].y = d.y), t[i].colorMap = BodyIndexMap[i] } catch (o) { } return t } function Rotation_points(a, e, t, r, i, d, n, o, s, l) { s && (l = t.d.split(/(?=[LMC])/)[0].trim().split(" "), s = !1); var c = element_group(d3.select("#dummyArea_" + e), "Temp_" + a.partID, 0, 0, 1, 1, 0, 0, 0), p = element_path(c, "TempPath_" + a.partID, t.d, 1, 1, 0, 0, 0, "black", "black", 1, 1).node().getBBox(); d3.select("#Temp_" + a.partID).remove(); for (var m = !1, $ = "", g = 1; g < t.d.length; g++)1 === t.d.charAt(g).length && t.d.charAt(g).match(/[a-z]/i) && (m = !0), m || ($ += t.d.charAt(g)); return p.x > i && (i = p.x), p.y > d && (d = p.y), p.width > n && (n = p.width), p.height > o && (o = p.height), r.push($.split(" ")), i = Number(i) + Number(l[1]), d = Number(d) + Number(l[2]), 0 == p.x && (console.log(t), console.log(a), console.log(p), console.log($)), o } function sleep(a) { return new Promise(e => setTimeout(e, a)) } 
function anim_lib_Basic(person) { let e = {}; e.test = async function(i){return new Promise(async function (a, e) {
// DO NOT EDIT ABOVE
// -------------------------------------------------------------------------------------------------------


// ADD CODE HERE




// -------------------------------------------------------------------------------------------------
// DO NOT EDIT BELOW
a()})}; person.anim.lib = {}, person.anim.lib.basic = e } 
async function mainFunction() { let a = d3.select("#Full_SVG_Test_Space"); element_img(a, "ImgScreen", 2e3, 1e3, "../Backgrounds/school-cafeteria-bg1.png", "Black", 0, 1, 1, 0, 0, 0), element_group(a, "ruler", 0, 0, 1, 1, 0, 0, 0), element_group(a, "Event1", 0, 0, 1, 1, 0, 0, 0), updateImageProperties("ImgScreen", 100, 2, -550, -300, "0.1s"); var e = await make(await d3.json("test1.json")), t = await make(await d3.json("test2.json")), r = await make(await d3.json("test3.json")), i = await make(await d3.json("test4.json")), d = await make(await d3.json("test5.json")); async function n() { e.anim.prim.resetAndMove(200, 400, 200, 400), e.anim.lib.basic.test({}), t.anim.prim.resetAndMove(500, 400, 500, 400), t.anim.lib.basic.test({}), r.anim.prim.resetAndMove(800, 400, 800, 400), r.anim.lib.basic.test({}), i.anim.prim.resetAndMove(1100, 400, 1100, 400), i.anim.lib.basic.test({}), d.anim.prim.resetAndMove(1400, 400, 1400, 400), d.anim.lib.basic.test({}) } await n() } mainFunction();